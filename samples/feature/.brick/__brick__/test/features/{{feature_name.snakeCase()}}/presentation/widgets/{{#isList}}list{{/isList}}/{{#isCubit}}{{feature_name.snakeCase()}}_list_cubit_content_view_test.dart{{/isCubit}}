// ignore_for_file: prefer_const_constructors

import 'package:bloc_test/bloc_test.dart';
import 'package:{{packageName.snakeCase()}}/features/{{feature_name.snakeCase()}}/presentation/cubit/{{feature_name.snakeCase()}}_list/{{feature_name.snakeCase()}}_list_cubit.dart';
import 'package:{{packageName.snakeCase()}}/features/{{feature_name.snakeCase()}}/presentation/widgets/list/{{feature_name.snakeCase()}}_list_cubit_content_view.dart';
import 'package:{{packageName.snakeCase()}}/features/{{feature_name.snakeCase()}}/presentation/widgets/list/{{feature_name.snakeCase()}}_list_cubit_view.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_test/flutter_test.dart';

import '../../../../../helpers/helpers.dart';
import '../../../../../helpers/mocks.dart';

class Mock{{feature_name.pascalCase()}}ListCubit extends MockCubit<{{feature_name.pascalCase()}}ListState> implements {{feature_name.pascalCase()}}ListCubit {}

void main() {
  TestWidgetsFlutterBinding.ensureInitialized();
  group('{{feature_name.pascalCase()}}ListPage', () {
    late {{feature_name.pascalCase()}}ListCubit mockCubit;
    setUpAll(() async {
      // Inject
      setupMockInjection();
      mockCubit = Mock{{feature_name.pascalCase()}}ListCubit();
    });
    setUp(() {
      mockInLocator(mockCubit);
    });
    group('{{feature_name.pascalCase()}}ListCubitContentView', () {
      testWidgets('renders `{{feature_name.pascalCase()}}ListCubitView`', (tester) async {
        final initState = {{feature_name.pascalCase()}}ListInitialState();
        whenListen(mockCubit, Stream.fromIterable([initState]), initialState: initState);
        await tester.pumpApp(
          BlocProvider(
            create: (context) => mockCubit,
            child: {{feature_name.pascalCase()}}ListCubitContentView(),
          ),
        );
        expect(find.byType({{feature_name.pascalCase()}}ListCubitView), findsOneWidget);
      });
    });
  });
}
